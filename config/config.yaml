# Server Configuration
server:
  http_port: 8080
  grpc_port: 50051 # Corresponds to GRPC_PORT ENV
  pod_id: "" # This should be set via ENV (e.g., POD_IP via Downward API)
  enable_reflection: false # Default to false for production

# NATS Configuration
nats:
  url: "nats://nats:4222" # Corresponds to NATS_URL ENV
  stream_name: "websocket_stream"
  consumer_name: "ws_fanout"
  connect_timeout_seconds: 5    # Default NATS client connection timeout
  reconnect_wait_seconds: 2   # Default NATS client reconnect wait
  max_reconnects: 5           # Default NATS client max reconnects (-1 for infinite)
  ping_interval_seconds: 120  # NATS client default is 2 minutes
  max_pings_out: 2            # NATS client default
  retry_on_failed_connect: true # NATS client default

# Redis Configuration
redis:
  address: "redis:6379" # Corresponds to REDIS_ADDR ENV
  # password: "" # If needed
  # db: 0       # If needed
  session_lock_retry_delay_ms: 250
  nats_ack_wait_seconds: 30
  grpc_client_forward_timeout_seconds: 5 # Default to 5 seconds

# Logging Configuration
log:
  level: "info" # Corresponds to LOG_LEVEL ENV

# Authentication Configuration
auth:
  secret_token: "YOUR_32_CHAR_DAISI_WS_SERVICE_SECRET_TOKEN_HERE" # General API Key
  token_aes_key: "YOUR_64_CHAR_HEX_ENCODED_AES256_KEY_FOR_TOKENS_HERE" # For company token encryption
  admin_secret_token: "YOUR_32_CHAR_DEDICATED_TOKEN_GENERATION_ADMIN_KEY_HERE" # Admin API Key
  admin_token_aes_key: "YOUR_64_CHAR_HEX_ENCODED_AES256_KEY_FOR_ADMIN_TOKENS_HERE"
  token_cache_ttl_seconds: 30
  admin_token_cache_ttl_seconds: 60
  
app:
  service_name: "daisi-ws-service"
  version: "1.0.0"
  use_melody_websocket: true
  
  # WebSocket Health Checks
  ping_interval_seconds: 30      # Every 30s (was 20s)
  pong_wait_seconds: 90         # 3x ping interval
  write_timeout_seconds: 30
  max_missed_pongs: 3           # More tolerance (was 2)
  
  # Session & Route TTLs
  session_ttl_seconds: 3600     # 1 hour as required
  route_ttl_seconds: 7200       # 2 hours (longer than session)
  ttl_refresh_interval_seconds: 300  # Every 5 minutes (was 10s)
  
  # NATS Settings
  nats_max_ack_pending: 5000
  nats_ack_wait_seconds: 30
  
  # HTTP Server
  shutdown_timeout_seconds: 30
  read_timeout_seconds: 10
  idle_timeout_seconds: 60
  
  # WebSocket Settings
  websocket_compression_mode: "disabled"  # Enable if bandwidth is a concern
  websocket_compression_threshold: 1024
  websocket_development_insecure_skip_verify: false  # MUST be false in production
  
  # gRPC Settings (if using inter-pod communication)
  grpc_pool_idle_timeout_seconds: 300
  grpc_pool_health_check_interval_seconds: 60
  grpc_circuitbreaker_fail_threshold: 5
  grpc_circuitbreaker_open_duration_seconds: 30
  
  # Backpressure Settings
  websocket_message_buffer_size: 1000
  websocket_backpressure_drop_policy: "drop_oldest"
  websocket_slow_client_latency_ms: 5000
  websocket_slow_client_disconnect_threshold_ms: 30000

# Adaptive TTL Configuration
adaptive_ttl:
  session_lock:
    enabled: false  # Keep simple for now
    min_ttl_seconds: 1800       # 30 minutes
    max_ttl_seconds: 3600       # 1 hour
    activity_threshold_seconds: 300  # 5 minutes
    active_ttl_seconds: 3600
    inactive_ttl_seconds: 1800
    
  message_route:
    enabled: true
    min_ttl_seconds: 300        # 5 minutes
    max_ttl_seconds: 1800       # 30 minutes (was 900s)
    activity_threshold_seconds: 300  # 5 minutes (was 600s)
    active_ttl_seconds: 1800    # 30 minutes for active chats
    inactive_ttl_seconds: 300   # 5 minutes for inactive
    
  chat_route:
    enabled: false
    min_ttl_seconds: 3600       # 1 hour
    max_ttl_seconds: 7200       # 2 hours
    activity_threshold_seconds: 1800  # 30 minutes
    active_ttl_seconds: 7200
    inactive_ttl_seconds: 3600